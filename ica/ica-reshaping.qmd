---
title: "ica-reshaping"
format: html
---

```{r}
library(tidyverse)
penguins <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')
```

```{r}
# Using count()
penguins |>
  count(species, sex)

# Using group_by() and summarize()
penguins |>
  group_by(species,sex) |>
  summarize(n())
```

```{r}
# Units of observation = penguins
head(penguins)
```

```{r}
penguin_avg <- penguins |> 
  group_by(species, sex) |> 
  summarize(avg_body_mass = mean(body_mass_g, na.rm = TRUE)) |> 
  na.omit()

# Units of observation = species/sex
head(penguin_avg)
```

```{r}
penguin_avg |> 
pivot_wider(names_from = sex, values_from = avg_body_mass)
```

```{r}
penguin_avg_wide <- penguin_avg |> 
  pivot_wider(names_from = sex, values_from = avg_body_mass)

penguin_avg_wide
```

```{r}
# We can either communicate which variables we WANT to collect into a single column (female, male)
penguin_avg_wide |> 
  pivot_longer(cols = c(female, male), names_to = "sex", values_to = "avg_body_mass")
```

**Exercise**
```{r}
sleep_wide <- read.csv("https://mac-stat.github.io/data/sleep_wide.csv")

head(sleep_wide)
```

```{r}
# For cols, try 2 appproaches: using - and starts_with
sleep_wide |> 
   pivot_longer(cols = Subject, names_to = "day", values_to = "reaction_time")
```

```{r}
sleep_long <- sleep_wide |>
  pivot_longer(cols = -Subject,
               names_to = "day",
               names_prefix = "day_",
               values_to = "reaction_time")

head(sleep_long)
```

```{r}
sleep_long <- sleep_wide |>
  pivot_longer(cols = -Subject,
               names_to = "day",
               names_prefix = "day_",
               values_to = "reaction_time") |> 
  mutate(Subject = as.factor(Subject), day = as.numeric(day))

# Check it out
# Same data, different class
head(sleep_long)
```

```{r}
# Make a line plot of reaction time by day for each subject
# Put these all on the same frame
ggplot(sleep_long,aes(x = day,y = reaction_time,color = Subject)) +
  geom_line()
```

```{r}
# Make a line plot of reaction time by day for each subject
# Put these all on separate frames (one per subject)
ggplot(sleep_long,aes(x = day,y = reaction_time,color = Subject)) +
  geom_line()+
  facet_wrap(~Subject)
```

```{r}
sleep_long |>
  pivot_wider(names_from = day, values_from = reaction_time) |> 
  head()
```

```{r}
sleep_long |>
  pivot_wider(names_from = day, values_from = reaction_time, names_prefix = "day_") |> 
  head()
```

**Exercise**
```{r}
# Load data
library(tidyr)
data("billboard")

# Check it out
head(billboard)
```

```{r}
ggplot(billboard, aes(y = wk2,x = wk1,color = "2 Pac"))+
  geom_line()+
  geom_abline(intercept = 0, slope = 1)
```

```{r}
#wrangling tool: identify which songs are those above the line in Part a, i.e. with rankgings that went up from week 1 to week 2.
billboard |>
  filter(wk2>wk1)

```











